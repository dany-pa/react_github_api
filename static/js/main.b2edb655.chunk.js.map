{"version":3,"sources":["store/reducers/index.ts","api/index.ts","const.ts","store/sagas/index.ts","store/index.ts","components/RepositoryCard.tsx","components/CardSkeleton.tsx","App.tsx","reportWebVitals.ts","theme.ts","index.tsx"],"names":["defaultState","q","totalCount","repositoriesCards","page","errorMessage","isLoading","API","a","trimmedQ","trim","total_count","items","fetch","headers","Authorization","result","json","status","setQ","search","setPage","setError","sagaSetQ","action","put","type","payload","call","api","message","select","state","takeEvery","debounce","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","mySaga","RepositoryCard","name","html_url","avatar_url","stargazers_count","description","topics","Card","sx","mb","raised","CardHeader","avatar","Avatar","src","title","titleTypographyProps","fontSize","subheader","CardContent","Typography","variant","map","topic","Chip","label","mr","mt","CardActions","Link","href","target","underline","CardSkeleton","Stack","spacing","margin","border","padding","width","Skeleton","height","animation","App","dispatch","useDispatch","useSelector","onQChange","useCallback","e","value","useState","pageCount","setPageCount","useEffect","pages","Math","ceil","onPageChange","topHeight","setTopHeight","Container","my","paddingTop","maxWidth","position","backgroundColor","zIndex","top","TextField","onChange","helperText","fullWidth","Pagination","count","color","Box","card","index","owner","toString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createTheme","palette","primary","main","secondary","error","red","A400","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.b2edb655.chunk.js","sourcesContent":["import { Repository } from '../../api';\r\nimport Action from './actions';\r\n\r\nexport type State = {\r\n    q: string;\r\n    totalCount: number;\r\n    repositoriesCards: Repository[];\r\n    page: number;\r\n    errorMessage: string | null;\r\n    isLoading: boolean;\r\n};\r\n\r\nexport const defaultState: State = {\r\n    q: '',\r\n    totalCount: 0,\r\n    repositoriesCards: [],\r\n    page: 0,\r\n    errorMessage: null,\r\n    isLoading: false,\r\n};\r\n\r\nexport default (state: State | undefined, action: Action): State => {\r\n    state = state || defaultState;\r\n\r\n    switch (action.type) {\r\n        case 'SET_Q':\r\n            return {\r\n                ...state,\r\n                // ВОПРОС: Как правильней поступить с заданием дефолтного значения, если ничего не пришло в пэйлоаде?\r\n                q: action.payload.q || '',\r\n            };\r\n\r\n        case 'SET_TOTAL_COUNT':\r\n            return {\r\n                ...state,\r\n                totalCount: action.payload.totalCount || 0,\r\n            };\r\n\r\n        case 'SET_REPOSITORIES_CARDS':\r\n            return {\r\n                ...state,\r\n                repositoriesCards: action.payload.repositoriesCards || [],\r\n            };\r\n\r\n        case 'SET_PAGE':\r\n            return {\r\n                ...state,\r\n                page: action.payload.page || 0,\r\n            };\r\n\r\n        case 'SET_ERROR_MESSAGE':\r\n            return {\r\n                ...state,\r\n                errorMessage: action.payload.errorMessage || null,\r\n            };\r\n\r\n        case 'SET_IS_LOADING':\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload.isLoading || false,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {PER_PAGE} from '../const'\r\n// ВОПРОС: Типы стоит оставлять прямо в этом файле, или лучше их вынести в отдельный файл?\r\nexport type Response = {\r\n    total_count: number;\r\n    items: Repository[];\r\n};\r\n\r\nexport type Repository = {\r\n    name: string;\r\n    html_url: string;\r\n    stargazers_count: number;\r\n    description: string;\r\n    topics: string[];\r\n    owner: {\r\n        avatar_url: string;\r\n    };\r\n};\r\n\r\nclass API {\r\n    // ВОПРОС: Как правильно описать возвращаемый тип?\r\n    async search(q: string, page: number = 1): Promise<Response | unknown> {\r\n        const trimmedQ = q.trim();\r\n        if (!trimmedQ) {\r\n            return {\r\n                total_count: 0,\r\n                items: [],\r\n            };\r\n        }\r\n\r\n        page = page <= 0 ? 1 : page;\r\n\r\n        try {\r\n            const result = await fetch(\r\n                `https://api.github.com/search/repositories?per_page=${PER_PAGE}&q=${trimmedQ}&page=${page}`,\r\n                {\r\n                    headers: {\r\n                        Authorization:\r\n                        // `token ${process.env.REACT_APP_AUTH_TOKEN}`,\r\n                        // Пока не стал выносить токен в отдельный файл.\r\n                            `token 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`,\r\n                    },\r\n                }\r\n            );\r\n            const json = await result.json();\r\n            if (result.status !== 200) {\r\n                throw json;\r\n            }\r\n            return json;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n\r\nexport default new API();\r\n","export const PER_PAGE = 10;\r\nexport const MAX_PAGES = 1000 / PER_PAGE;\r\n","import { call, put, takeEvery, debounce, select } from 'redux-saga/effects';\r\nimport api, { Response } from '../../api';\r\nimport { State } from '../reducers';\r\n// import Action from '../reducers/actions';\r\n\r\n// ВОПРОС: Не смог победить any\r\nfunction* setQ(action: any) {\r\n    yield put({\r\n        type: 'SET_TOTAL_COUNT',\r\n        payload: { totalCount: 0 },\r\n    });\r\n    yield put({ type: 'SET_PAGE', payload: { page: 1 } });\r\n    yield put({ type: 'SET_Q', payload: action.payload });\r\n    yield put({ type: '*SEARCH', payload: action.payload });\r\n}\r\n\r\nfunction* search(action: any) {\r\n    // ВОПРОС: Как лучше делать очистку каких-то значений при старте поиска?\r\n\r\n    yield put({\r\n        type: 'SET_REPOSITORIES_CARDS',\r\n        payload: { repositoriesCards: [] },\r\n    });\r\n\r\n    // ВОПРОС: Может есть какой-то лучший способ делать индикатор загрузки?\r\n    yield put({\r\n        type: 'SET_IS_LOADING',\r\n        payload: { isLoading: true },\r\n    });\r\n\r\n    try {\r\n        const result: Response = yield call(\r\n            api.search,\r\n            action.payload.q,\r\n            action.payload.page\r\n        );\r\n\r\n        yield put({\r\n            type: 'SET_TOTAL_COUNT',\r\n            payload: { totalCount: result.total_count },\r\n        });\r\n\r\n        yield put({\r\n            type: 'SET_REPOSITORIES_CARDS',\r\n            payload: { repositoriesCards: result.items },\r\n        });\r\n    } catch (error) {\r\n        yield put({\r\n            type: 'SET_ERROR_MESSAGE',\r\n            // ВОПРОС: Не смог победить unknown в типе error\r\n            // @ts-ignore\r\n            payload: { errorMessage: error.message },\r\n        });\r\n    } finally {\r\n        yield put({\r\n            type: 'SET_IS_LOADING',\r\n            payload: { isLoading: false },\r\n        });\r\n    }\r\n}\r\n\r\nfunction* setPage(action: any) {\r\n    yield put({ type: 'SET_PAGE', payload: action.payload });\r\n\r\n    const q: string = yield select((state: State): string => state.q);\r\n    yield put({\r\n        type: '*SEARCH',\r\n        payload: {\r\n            q,\r\n            page: action.payload.page,\r\n        },\r\n    });\r\n}\r\n\r\nfunction* setError(action: any) {\r\n    yield put({\r\n        type: 'SET_ERROR',\r\n        payload: action.payload,\r\n    });\r\n}\r\n\r\n// ВОПРОС: Надо делать одну сагу, или несколько?\r\nexport default function* sagaSetQ() {\r\n    yield takeEvery('*SET_Q', setQ);\r\n    yield debounce(300, '*SEARCH', search);\r\n    yield takeEvery('*SET_PAGE', setPage);\r\n    yield takeEvery('*SET_ERROR', setError);\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducer from './reducers';\r\nimport mySaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(reducer, applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(mySaga);\r\n\r\nexport default store;\r\n","import {\r\n    CardContent,\r\n    CardHeader,\r\n    Typography,\r\n    CardActions,\r\n    Avatar,\r\n    Link,\r\n    Card,\r\n    Chip,\r\n} from '@mui/material';\r\n\r\nfunction RepositoryCard({\r\n    name,\r\n    html_url,\r\n    avatar_url,\r\n    stargazers_count,\r\n    description,\r\n    topics,\r\n}: {\r\n    name: string;\r\n    html_url: string;\r\n    avatar_url: string;\r\n    stargazers_count: number;\r\n    description: string;\r\n    topics: string[];\r\n}) {\r\n    return (\r\n        <Card sx={{ mb: 1 }} raised>\r\n            <CardHeader\r\n                avatar={<Avatar src={avatar_url}>R</Avatar>}\r\n                title={name}\r\n                titleTypographyProps={{ fontSize: 25 }}\r\n                subheader={`⭐${stargazers_count}`}\r\n            />\r\n            <CardContent>\r\n                {\r\n                    // Если текста будет много, все уедет. Но я не стал обрабатывать это случай.\r\n                }\r\n                <Typography variant=\"body2\">{description}</Typography>\r\n\r\n                {\r\n                    // Если топиков будет много, все уедет. Но я не стал обрабатывать это случай.\r\n                }\r\n                {topics.map((topic: string) => (\r\n                    <Chip label={topic} sx={{ mr: 1, mt: 1 }} />\r\n                ))}\r\n            </CardContent>\r\n            <CardActions>\r\n                <Link href={html_url} target=\"_blank\" underline=\"always\">\r\n                    В репозиторий\r\n                </Link>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default RepositoryCard;\r\n","import { Stack, Skeleton } from '@mui/material';\r\n\r\nfunction CardSkeleton() {\r\n    return (\r\n        <Stack\r\n            spacing={1}\r\n            sx={{\r\n                margin: '0 auto 10px auto',\r\n                border: '1px solid rgba(0, 0, 0, 0.11)',\r\n                padding: 1,\r\n                width: 530,\r\n            }}\r\n        >\r\n            <Skeleton\r\n                variant=\"rectangular\"\r\n                width={530}\r\n                height={20}\r\n                animation=\"wave\"\r\n            />\r\n            <Skeleton\r\n                variant=\"circular\"\r\n                width={40}\r\n                height={40}\r\n                animation=\"wave\"\r\n            />\r\n            <Skeleton\r\n                variant=\"rectangular\"\r\n                width={530}\r\n                height={118}\r\n                animation=\"wave\"\r\n            />\r\n        </Stack>\r\n    );\r\n}\r\n\r\nexport default CardSkeleton;\r\n","import { useEffect, useState, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { State } from './store/reducers';\r\nimport { Repository } from './api';\r\nimport { MAX_PAGES, PER_PAGE } from './const';\r\nimport RepositoryCard from './components/RepositoryCard';\r\nimport CardSkeleton from './components/CardSkeleton';\r\nimport {\r\n    Container,\r\n    Pagination,\r\n    Card,\r\n    Box,\r\n    TextField,\r\n    Typography,\r\n} from '@mui/material';\r\n\r\nfunction App() {\r\n    // Вопрос: Как быть с именем dispatch если мне надо использовать и useDispatch() и useReducer со своим dispatch?\r\n    const dispatch = useDispatch();\r\n\r\n    const q = useSelector((state: State): string => state.q);\r\n    const onQChange = useCallback(\r\n        (e) => {\r\n            dispatch({ type: '*SET_Q', payload: { q: e.target.value } });\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    const isLoading = useSelector((state: State): boolean => state.isLoading);\r\n    const errorMessage = useSelector(\r\n        (state: State): string | null => state.errorMessage\r\n    );\r\n    const totalCount = useSelector((state: State): number => state.totalCount);\r\n    const page = useSelector((state: State): number => state.page);\r\n    const repositoriesCards = useSelector(\r\n        (state: State): Repository[] => state.repositoriesCards\r\n    );\r\n\r\n    const [pageCount, setPageCount] = useState(0);\r\n    useEffect(() => {\r\n        const pages = Math.ceil(totalCount / PER_PAGE);\r\n        setPageCount(pages > MAX_PAGES ? MAX_PAGES : pages);\r\n    }, [totalCount]);\r\n\r\n    const onPageChange = useCallback(\r\n        (e, page) => {\r\n            dispatch({ type: '*SET_PAGE', payload: { page } });\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    // ВОПРОС: Надо это выносить в отдельный компонент? Или подход с функцией тоже нормальный?\r\n    const getPagination = () => {\r\n        if (totalCount > 0) {\r\n            return (\r\n                <Pagination\r\n                    count={pageCount}\r\n                    color=\"primary\"\r\n                    onChange={onPageChange}\r\n                    page={page}\r\n                />\r\n            );\r\n        }\r\n\r\n        // ВОПРОС: Нужно всегда null возвращать, или можно обойтись и undefined?\r\n        return null;\r\n    };\r\n\r\n    const getErrorMessage = () => {\r\n        if (errorMessage) {\r\n            return <Typography color=\"red\">Ошибка: {errorMessage}</Typography>;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    const getCards = () => {\r\n        if (isLoading) return <CardSkeleton />;\r\n\r\n        return repositoriesCards.map((card: Repository, index: number) => (\r\n            //Почему-то остоянно вылезает ошибка Each child in a list should have a unique \"key\" prop.\r\n            <RepositoryCard\r\n                name={card.name}\r\n                html_url={card.html_url}\r\n                avatar_url={card.owner.avatar_url}\r\n                stargazers_count={card.stargazers_count}\r\n                description={card.description}\r\n                topics={card.topics}\r\n                key={index.toString()}\r\n            />\r\n        ));\r\n    };\r\n\r\n    const getSadMessage = () => {\r\n        if (page == 100) return <Typography color=\"red\">Гитхаб больше не разрешает :(</Typography>;\r\n        return null;\r\n    };\r\n\r\n    const TOP_HEIGHT = 120;\r\n    const PAGINATION_HEIGHT = 50;\r\n    const SAD_MESSAGE_HEIGHT = 20;\r\n    const CARDS_PADDING = 20;\r\n    const [topHeight, setTopHeight] = useState(TOP_HEIGHT);\r\n\r\n    useEffect(() => {\r\n        const paginationHeight = pageCount > 0 ? PAGINATION_HEIGHT : 0;\r\n        const sadMessageHeight = page == 100 ? SAD_MESSAGE_HEIGHT : 0;\r\n\r\n        setTopHeight(TOP_HEIGHT + paginationHeight + sadMessageHeight);\r\n    }, [pageCount, page]);\r\n\r\n    return (\r\n        <Container\r\n            sx={{ my: 4, paddingTop: `${topHeight + CARDS_PADDING}px` }}\r\n            maxWidth=\"sm\"\r\n        >\r\n            {\r\n                // ВОПРОС: Нужно <Card> оборачивать в <Box> ?\r\n                // Со стилями я не стал заморачиваться и просто записал их везде прямо в компоненте. Какой подход стоит использовать в реальных проектах?\r\n            }\r\n            <Card\r\n                sx={{\r\n                    my: 2,\r\n                    padding: '10px',\r\n                    position: 'fixed',\r\n                    width: '530px',\r\n                    backgroundColor: '#fff',\r\n                    zIndex: 9,\r\n                    height: topHeight,\r\n                    top: 0,\r\n                }}\r\n            >\r\n                <TextField\r\n                    value={q}\r\n                    onChange={onQChange}\r\n                    helperText=\"Введи название репозитория\"\r\n                    label=\"Поиск\"\r\n                    fullWidth\r\n                />\r\n                <h3>Найдено репозиториев: {totalCount}</h3>\r\n\r\n                {getPagination()}\r\n\r\n                {getSadMessage()}\r\n            </Card>\r\n\r\n            <Box>{getCards()}</Box>\r\n\r\n            {getErrorMessage()}\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createTheme } from '@mui/material/styles';\r\nimport { red } from '@mui/material/colors';\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#556cd6',\r\n        },\r\n        secondary: {\r\n            main: '#19857b',\r\n        },\r\n        error: {\r\n            main: red.A400,\r\n        },\r\n    },\r\n});\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport theme from './theme';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <ThemeProvider theme={theme}>\r\n                <App />\r\n            </ThemeProvider>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}